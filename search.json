[{"path":"https://docs.ropensci.org/outcomerate/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/outcomerate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://docs.ropensci.org/outcomerate/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://docs.ropensci.org/outcomerate/articles/intro-to-outcomerate.html","id":"more-advanced-uses","dir":"Articles","previous_headings":"","what":"More Advanced Uses","title":"Intro to outcomerate","text":"certain situations, may want calculate outcome rates based vector codes, rather table frequency counts. just easy obtain rates way using outcomerate: might prefer input format, just easy specify counts? Well, want calculate outcome rates covariate, typically need go back original data. example, use dplyr tidyr calculate outcome rates interest race: Outcome Rates Race","code":"# print the head of the dataset head(middleearth) #> # A tibble: 6 × 9 #>   code  outcome            researcher region    Q1       Q2   day race   svywt #>   <ord> <ord>              <chr>      <fct>     <fct> <int> <int> <fct>  <dbl> #> 1 UO    Unlocated          #23        Beleriand NA       NA     1 Elf       32 #> 2 I     Complete interview #23        Beleriand No        7     1 Hobbit    52 #> 3 I     Complete interview #23        Beleriand No        7     1 Hobbit    52 #> 4 P     Partial interview  #13        Beleriand No        7     1 Hobbit    52 #> 5 NE    Not eligible       #50        Beleriand NA       NA     1 Man       85 #> 6 I     Complete interview #23        Beleriand No        7     1 Man       85  # calculate rates using codes; should be same result as before outcomerate(middleearth$code, e = e) #>        RR1        RR2        RR3        RR4        RR5        RR6      COOP1  #> 0.46913580 0.67839506 0.47149080 0.68180052 0.52522460 0.75950242 0.65573770  #>      COOP2      COOP3      COOP4       REF1       REF2       REF3       CON1  #> 0.94823123 0.65630397 0.94905009 0.03641975 0.03660258 0.04077402 0.71543210  #>       CON2       CON3       LOC1       LOC2  #> 0.71902347 0.80096752 0.89320988 0.89769367 # create a small wrapper function get_rates <- function(x, ...){   rlist <- c(\"RR1\", \"RR2\", \"COOP1\", \"COOP2\", \"CON1\", \"REF1\", \"LOC1\")   as.data.frame(as.list(outcomerate(x, rate = rlist, e = e, ...))) }  # calculate rates by group middleearth %>%   group_by(race) %>%   summarise(n     = n(),             Nhat  = sum(svywt),             rates = list(get_rates(code))) %>%   unnest(cols = c(rates)) %>%   kable(digits = 2, caption = \"Outcome Rates by Race\")"},{"path":"https://docs.ropensci.org/outcomerate/articles/intro-to-outcomerate.html","id":"weighted-outcome-rates","dir":"Articles","previous_headings":"More Advanced Uses","what":"Weighted Outcome Rates","title":"Intro to outcomerate","text":"certain situations, also wish produce weighted outcome rates, using survey weights provided data. easy one additional parameter: Weighted Outcome Rates Region Compare equivalent unweighted estimates, see results . Unweighted Outcome Rates Region","code":"# calculate weighted rates by group middleearth %>%   group_by(region) %>%   summarise(n     = n(),             Nhat  = sum(svywt),             rates = list(get_rates(code, weight = svywt))) %>%   unnest(cols = c(rates)) %>%   kable(digits = 2, caption = \"Weighted Outcome Rates by Region\")"},{"path":"https://docs.ropensci.org/outcomerate/articles/intro-to-outcomerate.html","id":"by-date","dir":"Articles","previous_headings":"More Advanced Uses","what":"By Date","title":"Intro to outcomerate","text":"Lastly, another useful application grouped analysis calculate rates date. allows monitor quality day day notice performance starts change time.  example, can see contact rate (CON) response rate (RR) start degrade quality towards day 30. fieldwork still continuing, something look attempt explain /redress.","code":"library(ggplot2) library(stringr)  # day-by-day quality monitoring middleearth %>%   group_by(day) %>%   summarise(rates = list(get_rates(code))) %>%   unnest(cols = c(rates)) %>%   gather(rate, value, -day) %>%   mutate(type = str_sub(rate, start = -9, end = -2)) %>%   ggplot(aes(x = day, y = value, colour = rate)) +   geom_line(size = 1) +   facet_wrap(~type) +   labs(title = \"Outcome Rates Over Time\") #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://docs.ropensci.org/outcomerate/articles/intro-to-outcomerate.html","id":"variance-estimation","dir":"Articles","previous_headings":"","what":"Variance Estimation","title":"Intro to outcomerate","text":"estimate errors estimates generated outcomerate(), simplest approach use normal approximation. Since outcome rates nothing proportions (nearly ), standard error given \\(SE(p) = \\sqrt{(p(1-p))/n}\\). standard error hand, can construct frequentist confidence intervals: Weighted variance estimation complex surveys require different procedures go beyond scope vignette. recommend using svycontrast() survey package obtain design-based errors account elements clustering stratification. Bootstrapping primary sampling units (PSUs) may also appropriate method depending design hand.","code":"# first, calculate the outcome rates (res <- outcomerate(middleearth$code)) #>        RR1        RR2        RR5        RR6      COOP1      COOP2      COOP3  #> 0.46913580 0.67839506 0.52522460 0.75950242 0.65573770 0.94823123 0.65630397  #>      COOP4       REF1       REF3       CON1       CON3       LOC1  #> 0.94905009 0.03641975 0.04077402 0.71543210 0.80096752 0.89320988  # estimate standard errors using the Normal approximation for proportions  se <- sapply(res, function(p) sqrt((p * (1 - p)) / nrow(middleearth))) # calculate 95% confidence intervals rbind(res - (se * 1.96), res + (se * 1.96)) #>            RR1       RR2       RR5       RR6     COOP1     COOP2     COOP3 #> [1,] 0.4453496 0.6561319 0.5014233 0.7391318 0.6330916 0.9376710 0.6336667 #> [2,] 0.4929220 0.7006582 0.5490259 0.7798730 0.6783838 0.9587915 0.6789412 #>          COOP4       REF1       REF3      CON1      CON3      LOC1 #> [1,] 0.9385691 0.02749088 0.03134782 0.6939260 0.7819369 0.8784892 #> [2,] 0.9595310 0.04534863 0.05020021 0.7369382 0.8199982 0.9079305"},{"path":"https://docs.ropensci.org/outcomerate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael Pilliard Hellwig. Author, maintainer. Carl Ganz. Reviewer. Neal Richardson. Reviewer.","code":""},{"path":"https://docs.ropensci.org/outcomerate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"American Association Public Opinion Research. 2016. Standard Definitions: Final Dispositions Case Codes Outcome Rates Surveys. 9th edition. AAPOR. Pilliard Hellwig, Rafael. (2018). outcomerate: AAPOR Survey Outcome Rates. R package version 1.0.1","code":"@Manual{,   title = {Standard Definitions: Final Dispositions of Case Codes and Outcome Rates for Surveys},   organization = {The American Association for Public Opinion Research (AAPOR)},   note = {9th edition},   year = {2016},   url = {https://www.aapor.org/Standards-Ethics/Standard-Definitions-(1).aspx}, } @Misc{,   title = {outcomerate: AAPOR Survey Outcome Rates (R package)},   author = {Rafael Pilliard Hellwig},   note = {v1.0.1},   year = {2018},   url = {https://github.com/ropensci/outcomerate}, }"},{"path":"https://docs.ropensci.org/outcomerate/index.html","id":"outcomerate","dir":"","previous_headings":"","what":"AAPOR Survey Outcome Rates","title":"AAPOR Survey Outcome Rates","text":"outcomerate lightweight R package implements standard outcome rates surveys, defined Standard Definitions American Association Public Opinion Research (AAPOR). Although mathematical formulas straightforward, can get tedious repetitive calculating rates hand, especially sub-groups study. formulas similar one another also dangerously easy make clerical mistake. outcomerate package simplifies analytically workflow defining formulas collection functions.","code":""},{"path":"https://docs.ropensci.org/outcomerate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"AAPOR Survey Outcome Rates","text":"Install package CRAN: Alternatively, install latest development version via github:","code":"install.packages(\"outcomerate\") #install.packages(\"devtools\") devtools::install_github(\"ropensci/outcomerate\")"},{"path":"https://docs.ropensci.org/outcomerate/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"AAPOR Survey Outcome Rates","text":"Let’s say try survey 12 people. finishing fieldwork, tabulate attempts table disposition outcomes: Using table, may wish report common survey outcome rates, : Response Rate: proportion sample results interview. Cooperation Rate: proportion people contacted participate survey. Refusal Rate: proportion sample refused participate. Contact Rate: proportion sampled cases manage reach respondent. Location Rate: proportion cases (say, establishment survey) manage locate. rates come number variants, definitions standardized AAPOR. outcomerate function lets calculate rates seamlessly: Dispositions always come tabulated format. Survey analysts often work microdata directly, row represents interview. outcomerate package allows obtain rates using format well:","code":"# load package library(outcomerate)  # set counts per disposition code (needs to be a named vector) freq <- c(I = 4, P = 2, R = 1, NC = 1, O = 1, UH = 1, UO = 1, NE = 1)  # calculate rates, assuming 90% of unknown cases are elligble outcomerate(freq, e = eligibility_rate(freq)) #>   RR1   RR2   RR3   RR4   RR5   RR6 COOP1 COOP2 COOP3 COOP4  REF1  REF2  REF3  #> 0.364 0.545 0.370 0.556 0.444 0.667 0.500 0.750 0.571 0.857 0.091 0.093 0.111  #>  CON1  CON2  CON3  LOC1  LOC2  #> 0.727 0.741 0.889 0.818 0.833 # define a vector of dispositions x <- c(\"I\", \"P\", \"I\", \"UO\", \"R\", \"I\", \"NC\", \"I\", \"O\", \"P\", \"UH\")  # calculate desired rates outcomerate(x, rate = c(\"RR2\", \"CON1\")) #>  RR2 CON1  #> 0.55 0.73  # obtain a weighted rate w <- c(rep(1.3, 6), rep(2.5, 5)) outcomerate(x, weight = w, rate = c(\"RR2\", \"CON1\")) #>  RR2w CON1w  #>  0.50  0.69"},{"path":"https://docs.ropensci.org/outcomerate/reference/eligibility_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Eligibility Rate — eligibility_rate","title":"Survey Eligibility Rate — eligibility_rate","text":"Provides estimate proportion cases unknown eligibility eligible, described (Valliant et al. 2013) . rate typically (necessarily) calculated screener data sources depending type survey, approaches calculating 'e' may therefore differ one survey next.","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/eligibility_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Eligibility Rate — eligibility_rate","text":"","code":"eligibility_rate(x, weight = NULL)"},{"path":"https://docs.ropensci.org/outcomerate/reference/eligibility_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey Eligibility Rate — eligibility_rate","text":"x character vector disposition outcomes (, P, R, NC, O, UH, UO, U, NE). Alternatively, named vector/table (weighted) disposition counts. weight optional numeric vector specifies weight element 'x' x character vector. none provided (default), unweighted estimate returned.","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/eligibility_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey Eligibility Rate — eligibility_rate","text":"present implementation follows default used Excel-based AAPOR Outcome Rate Calculator (Version 4.0, May, 2016) basis known ineligibles coded \"NE\". eligibility rate (ELR) defined ELR = (+ P + R + NC + O) / (+ P + R + NC + O + NE)","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/eligibility_rate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survey Eligibility Rate — eligibility_rate","text":"American Association Public Opinion Research (2016). “Standard Definitions: Final Dispositions Case Codes Outcome Rates Surveys.” https://www.aapor.org/Standards-Ethics/Standard-Definitions-(1).aspx.  Valliant R, Dever JA, Kreuter F (2013). Practical Tools Designing Weighting Survey Samples,  Statistics Social Behavioral Sciences. Springer New York.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/outcomerate/reference/eligibility_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey Eligibility Rate — eligibility_rate","text":"","code":"# load the outcomerate package library(outcomerate)  # Create a vector of survey dispositions # # I  = Complete interview # P  = Partial interview # R  = Refusal and break-off # NC = Non-contact # O  = Other # UH = Unknown if household/occupied housing unit # UO = Unknown, other # NE = Not eligible x <- c(\"I\", \"P\", \"I\", \"NE\", \"NC\", \"UH\", \"I\", \"R\", \"UO\", \"I\", \"O\", \"P\", \"I\")  # calculate all rates, assume 80% of unknown cases are elligble eligibility_rate(x) #>       ELR  #> 0.9090909   # calculate weighted rates w <- runif(13, 0, 5) eligibility_rate(x, weight = w) #>       ELR  #> 0.9636453   # alternatively, provide input as counts freq <- c(I = 6, P = 2, NC = 3, NE = 1) eligibility_rate(freq) #>       ELR  #> 0.9166667"},{"path":"https://docs.ropensci.org/outcomerate/reference/fmat.html","id":null,"dir":"Reference","previous_headings":"","what":"outcomerate Formula Matrix (Internal Data) — fmat","title":"outcomerate Formula Matrix (Internal Data) — fmat","text":"fmat object internal dataset used outcomerate package. holds definitions outcome rates. exception location rates, taken AAPOR Standard Definitions (2016).","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/fmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"outcomerate Formula Matrix (Internal Data) — fmat","text":"data 3-dimensional binary array consisting : outcome: codes , P, R, NC, O, UH, UO, eUH, eUO, NE rate: shorthand name rate (e.g. RR1) side: numerator (NUM) denominator (DEN) Given three dimensions, outcome rate can defined rational number (.e. fraction) consisting summation frequencies outcome codes (matrix entries nonzero). input parameters given user , P, R, NC, O, UH, UO parameter 'e'. parameter e multiplied UH, UO internally produce eUH, eUO. reason implementation : ) conforms DRY (repeat ) philosophy holding definitions one place. definitions can used upstream inputs functions/test suites requiring . b) makes easier use intermediate steps formula calculations. instance, may use researchers want obtain numerator/denominators calculations, instead output. c) makes easy compare output d) easier maintain","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/fmat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"outcomerate Formula Matrix (Internal Data) — fmat","text":"https://www.aapor.org/Standards-Ethics/Standard-Definitions-(1).aspx","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/fmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"outcomerate Formula Matrix (Internal Data) — fmat","text":"","code":"fmat <- outcomerate:::fmat  # Print the dimensions dimnames(fmat) #> $outcome #>  [1] \"I\"   \"P\"   \"R\"   \"NC\"  \"O\"   \"UH\"  \"UO\"  \"NE\"  \"eUH\" \"eUO\" #>  #> $rate #>  [1] \"RR1\"   \"RR2\"   \"RR3\"   \"RR4\"   \"RR5\"   \"RR6\"   \"COOP1\" \"COOP2\" \"COOP3\" #> [10] \"COOP4\" \"REF1\"  \"REF2\"  \"REF3\"  \"CON1\"  \"CON2\"  \"CON3\"  \"LOC1\"  \"LOC2\"  #>  #> $side #> [1] \"NUM\" \"DEN\" #>   # Say we want to know the defintion of Response Rate 2, RR2. We see # below that the numerator (NUM) column is defined by the entries with a 1, # or (I + P). Likewise, the denominator (DEN) is defined as # (I + P + R + NC + O + UH + UO) fmat[, \"RR2\", ] #>        side #> outcome NUM DEN #>     I     1   1 #>     P     1   1 #>     R     0   1 #>     NC    0   1 #>     O     0   1 #>     UH    0   1 #>     UO    0   1 #>     NE    0   0 #>     eUH   0   0 #>     eUO   0   0   # To use linear algebra, we define a zero-one numerator matrix 'N' # and a zero-one denominator matrix 'D'. Our count of disposition codes # is given here manually as 'x' (in the same order as N and D). N = fmat[ , , 1] D = fmat[ , , 2] x <- c(I = 5, P = 2, R = 1, NC = 7, O = 3,       UH = 4, UO = 8,  NE = 1, eUH = 3, eUO = 6)  # Return all rates (x %*% N) / (x %*% D) #>       rate #>              RR1       RR2       RR3       RR4       RR5       RR6     COOP1 #>   [1,] 0.1666667 0.2333333 0.1851852 0.2592593 0.2777778 0.3888889 0.4545455 #>       rate #>            COOP2 COOP3 COOP4       REF1       REF2       REF3      CON1 #>   [1,] 0.6363636 0.625 0.875 0.03333333 0.03703704 0.05555556 0.3666667 #>       rate #>             CON2      CON3 LOC1      LOC2 #>   [1,] 0.4074074 0.6111111  0.6 0.6666667   # The same thing can be achieved with the apply family of functions numden <- apply(x * fmat, 2:3, sum) numden[, 1] / numden[, 2] #>        RR1        RR2        RR3        RR4        RR5        RR6      COOP1  #> 0.16666667 0.23333333 0.18518519 0.25925926 0.27777778 0.38888889 0.45454545  #>      COOP2      COOP3      COOP4       REF1       REF2       REF3       CON1  #> 0.63636364 0.62500000 0.87500000 0.03333333 0.03703704 0.05555556 0.36666667  #>       CON2       CON3       LOC1       LOC2  #> 0.40740741 0.61111111 0.60000000 0.66666667"},{"path":"https://docs.ropensci.org/outcomerate/reference/middleearth.html","id":null,"dir":"Reference","previous_headings":"","what":"middleearth Dataset — middleearth","title":"middleearth Dataset — middleearth","text":"middlearth toy dataset consisting 1691 fake survey interviews conducted J.R.R. Tolkien's fictional world Middle Earth.","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/middleearth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"middleearth Dataset — middleearth","text":"Variables contained data: code: one outcome codes , P, R, NC, O, UH, UO, UH, UO, NE outcome: human-interpretable label code variable researcher: identifier researcher conducting interview region: region respondent (one five) Q1: hypothetical binary research question posed respondents Q2: hypothetical continuous scale question posed respondents day: day interview took place (1 first day fieldwork) race: race respondent middle earth (Dwarf, Elf, Hobbit, Man, Wizard) svywt: survey weight (inverse probability selection)","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/outcomerate.html","id":null,"dir":"Reference","previous_headings":"","what":"AAPOR Survey Outcome Rates — outcomerate","title":"AAPOR Survey Outcome Rates — outcomerate","text":"Provides standardized outcome rates surveys, primarily defined American Association Public Opinion Research (AAPOR). Details can found Standard Definitions manual (American Association Public Opinion Research 2016) .","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/outcomerate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AAPOR Survey Outcome Rates — outcomerate","text":"","code":"outcomerate(x, e = NULL, rate = NULL, weight = NULL,   return_nd = FALSE)"},{"path":"https://docs.ropensci.org/outcomerate/reference/outcomerate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AAPOR Survey Outcome Rates — outcomerate","text":"x character vector disposition outcomes (, P, R, NC, O, UH, UO). Alternatively, named vector/table (weighted) disposition counts. e scalar number specifies eligibility rate (estimated proportion unknown cases eligible). default method calculating 'e' provided eligibility_rate(). rate optional character vector specifying rates calculated. set NA (default), rates returned. weight optional numeric vector specifies weight element 'x' x character vector factor. none provided (default), unweighted estimate returned. return_nd logical switch function return numerator denominator instead rate. Defaults FALSE.","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/outcomerate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AAPOR Survey Outcome Rates — outcomerate","text":"Survey public opinion research often categorizes interview attempts survey according set outcome codes follows:  = Complete interview P  = Partial interview R  = Refusal break-NC = Non-contact O  = UH = Unknown household/occupied housing unit UO = Unknown, NE = Known ineligible high-level classes used calculate outcome rates provide measure quality fieldwork. outcome rates defined follows: AAPOR Response Rate proportion intended sample participate survey. RR1 = / ((+ P) + (R + NC + O) + (UH + UO)) RR2 = (+ P) / ((+ P) + (R + NC + O) + (UH + UO)) RR3 = / ((+ P) + (R + NC + O) + e(UH + UO)) RR4 = (+ P) / ((+ P) + (R + NC + O) + e(UH + UO)) RR5 = / ((+ P) + (R + NC + O)) RR6 = (+ P) / ((+ P) + (R + NC + O)) AAPOR Cooperation Rates proportion contacted respondents participate survey. COOP1 = / ((+ P) + R + O) COOP2 = (+ P) / ((+ P) + R + O) COOP3 = / ((+ P) + R) COOP4 = (+ P) / ((+ P) + R) AAPOR Refusal Rates proportion sample refuses participate survey. REF1 = R / ((+ P) + (R + NC + O) + (UH + UO)) REF2 = R / ((+ P) + (R + NC + O) + e(UH + UO)) REF3 = R / ((+ P) + (R + NC + O)) AAPOR Contact Rates proportion sample successfully contacted interview (whether chose participate ). CON1 = ((+ P) + (R + O)) / ((+ P) + (R + NC + O) + (UH+ UO)) CON2 = ((+ P) + (R + O)) / ((+ P) + (R + NC + O) + e(UH + UO)) CON3 = ((+ P) + (R + O)) / ((+ P) + (R + NC + O)) Location Rate proportion cases located interview. location rate defined AAPOR's Standards, can found (Valliant et al. 2013) . Note: depending located cases encoded, may may correct formula. LOC1 = ((+ P) + (R + O + NC)) / ((+ P) + (R + NC + O) + (UH + UO)) LOC2 = ((+ P) + (R + O + NC)) / ((+ P) + (R + NC + O) + e(UH + UO))","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/outcomerate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"AAPOR Survey Outcome Rates — outcomerate","text":"American Association Public Opinion Research (2016). “Standard Definitions: Final Dispositions Case Codes Outcome Rates Surveys.” https://www.aapor.org/Standards-Ethics/Standard-Definitions-(1).aspx. Valliant R, Dever JA, Kreuter F (2013). Practical Tools Designing Weighting Survey Samples,  Statistics Social Behavioral Sciences. Springer New York.  American Association Public Opinion Research (2016). “Standard Definitions: Final Dispositions Case Codes Outcome Rates Surveys.” https://www.aapor.org/Standards-Ethics/Standard-Definitions-(1).aspx.","code":""},{"path":"https://docs.ropensci.org/outcomerate/reference/outcomerate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AAPOR Survey Outcome Rates — outcomerate","text":"","code":"# load the outcomerate package library(outcomerate)  # Create a vector of survey dispositions # # I  = Complete interview # P  = Partial interview # R  = Refusal and break-off # NC = Non-contact # O  = Other # UH = Unknown if household/occupied housing unit # UO = Unknown, other # NE = Known ineligible x <- c(\"I\", \"P\", \"I\", \"NC\", \"UH\", \"I\", \"R\", \"NE\",       \"UO\", \"I\", \"O\", \"P\", \"I\")  # calculate all rates elr <- eligibility_rate(x) outcomerate(x, e = elr) #>        RR1        RR2        RR3        RR4        RR5        RR6      COOP1  #> 0.41666667 0.58333333 0.42307692 0.59230769 0.50000000 0.70000000 0.55555556  #>      COOP2      COOP3      COOP4       REF1       REF2       REF3       CON1  #> 0.77777778 0.62500000 0.87500000 0.08333333 0.08461538 0.10000000 0.75000000  #>       CON2       CON3       LOC1       LOC2  #> 0.76153846 0.90000000 0.83333333 0.84615385   # return only one rate outcomerate(x, rate = \"COOP1\") #>     COOP1  #> 0.5555556   # calculate weighted rates w <- runif(length(x), 0, 5) outcomerate(x, e = elr, weight = w) #>      RR1w      RR2w      RR3w      RR4w      RR5w      RR6w    COOP1w    COOP2w  #> 0.3916103 0.6189977 0.3960029 0.6259408 0.4460332 0.7050210 0.4824984 0.7626597  #>    COOP3w    COOP4w     REF1w     REF2w     REF3w     CON1w     CON2w     CON3w  #> 0.5024454 0.7941888 0.1604110 0.1622103 0.1827037 0.8116303 0.8207341 0.9244241  #>     LOC1w     LOC2w  #> 0.8779848 0.8878329   # alternatively, provide input as counts freq <- c(I = 6, P = 2, NC = 3, R = 1) outcomerate(freq, e = elr) #>        RR1        RR2        RR3        RR4        RR5        RR6      COOP1  #> 0.50000000 0.66666667 0.50000000 0.66666667 0.50000000 0.66666667 0.66666667  #>      COOP2      COOP3      COOP4       REF1       REF2       REF3       CON1  #> 0.88888889 0.66666667 0.88888889 0.08333333 0.08333333 0.08333333 0.75000000  #>       CON2       CON3       LOC1       LOC2  #> 0.75000000 0.75000000 1.00000000 1.00000000"},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"outcomerate-development-version","dir":"Changelog","previous_headings":"","what":"outcomerate (development version)","title":"outcomerate (development version)","text":"Minor updates vignettes reflect changes tidyverse.","code":""},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"outcomerate-101","dir":"Changelog","previous_headings":"","what":"outcomerate 1.0.1","title":"outcomerate 1.0.1","text":"CRAN release: 2018-10-06","code":""},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"documentation-1-0-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"outcomerate 1.0.1","text":"Added CITATION details package Added documentation pkgdown site","code":""},{"path":[]},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"outcomerate 1.0.0","text":"eligibility_rate() function added estimate proportion eligible cases unknowns, based known ineligibles (NE’s).","code":""},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"outcomerate 1.0.0","text":"Refactoring code based ROpenSci peer review feedback. Added S3 method factors. Addition many unit tests. Additional helpful error messages.","code":""},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"outcomerate 1.0.0","text":"weight argument longer accepts scalar inputs. weights provided, output labels renamed form ‘RR2w’ instead “RR2” rate = NULL function parameters, default behavior return possible rates given parameters specified. Disposition codes now accept “NE” known ineligibles. Within outcomerate(), largely ignored, used eligibility_rate() estimate e","code":""},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"documentation-1-0-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"outcomerate 1.0.0","text":"Added documentation (internal) fmat formula matrix object Added documentation middleearth toy dataset","code":""},{"path":"https://docs.ropensci.org/outcomerate/news/index.html","id":"outcomerate-0009000","dir":"Changelog","previous_headings":"","what":"outcomerate 0.0.0.9000","title":"outcomerate 0.0.0.9000","text":"Created outcomerate package","code":""}]
